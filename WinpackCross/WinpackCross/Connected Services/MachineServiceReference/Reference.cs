//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MachineServiceReference
{
    using Newtonsoft.Json;
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DB_Machine", Namespace="http://schemas.datacontract.org/2004/07/DTO.DataCollect")]
    public partial class DB_Machine : object
    {
        
        private int CountField;
        
        private bool DurumField;
        
        private string EtiketField;
        
        private string EtiketIPField;
        
        private string InkjetField;
        
        private string InkjetPortField;
        
        private string KameraField;
        
        private string KameraIPField;
        
        private string LOTField;
        
        private System.DateTime MFGField;
        
        private string MakinaField;
        
        private string MakinaIPField;
        
        private string MaxSnField;
        
        private System.DateTime SKTField;
        
        private string SNField;
        
        private System.DateTime TarihField;
        
        private System.Collections.Generic.Dictionary<object, object> stringBuilderField;
        
        private int ÜretimMiktarıField;
        
        private string Ürün_AdıField;
        
        private bool İhracatField;
        
        private int İşEmriIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count
        {
            get
            {
                return this.CountField;
            }
            set
            {
                this.CountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Durum
        {
            get
            {
                return this.DurumField;
            }
            set
            {
                this.DurumField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Etiket
        {
            get
            {
                return this.EtiketField;
            }
            set
            {
                this.EtiketField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EtiketIP
        {
            get
            {
                return this.EtiketIPField;
            }
            set
            {
                this.EtiketIPField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Inkjet
        {
            get
            {
                return this.InkjetField;
            }
            set
            {
                this.InkjetField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InkjetPort
        {
            get
            {
                return this.InkjetPortField;
            }
            set
            {
                this.InkjetPortField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kamera
        {
            get
            {
                return this.KameraField;
            }
            set
            {
                this.KameraField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KameraIP
        {
            get
            {
                return this.KameraIPField;
            }
            set
            {
                this.KameraIPField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOT
        {
            get
            {
                return this.LOTField;
            }
            set
            {
                this.LOTField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MFG
        {
            get
            {
                return this.MFGField;
            }
            set
            {
                this.MFGField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Makina
        {
            get
            {
                return this.MakinaField;
            }
            set
            {
                this.MakinaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakinaIP
        {
            get
            {
                return this.MakinaIPField;
            }
            set
            {
                this.MakinaIPField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxSn
        {
            get
            {
                return this.MaxSnField;
            }
            set
            {
                this.MaxSnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SKT
        {
            get
            {
                return this.SKTField;
            }
            set
            {
                this.SKTField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SN
        {
            get
            {
                return this.SNField;
            }
            set
            {
                this.SNField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Tarih
        {
            get
            {
                return this.TarihField;
            }
            set
            {
                this.TarihField = value;
            }
        }
        [JsonIgnore]
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<object, object> stringBuilder
        {
            get
            {
                return this.stringBuilderField;
            }
            set
            {
                this.stringBuilderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ÜretimMiktarı
        {
            get
            {
                return this.ÜretimMiktarıField;
            }
            set
            {
                this.ÜretimMiktarıField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ürün_Adı
        {
            get
            {
                return this.Ürün_AdıField;
            }
            set
            {
                this.Ürün_AdıField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool İhracat
        {
            get
            {
                return this.İhracatField;
            }
            set
            {
                this.İhracatField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int İşEmriID
        {
            get
            {
                return this.İşEmriIDField;
            }
            set
            {
                this.İşEmriIDField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MachineServiceReference.IMachineService")]
    public interface IMachineService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineService/Listele", ReplyAction="http://tempuri.org/IMachineService/ListeleResponse")]
        System.Threading.Tasks.Task<MachineServiceReference.DB_Machine[]> ListeleAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface IMachineServiceChannel : MachineServiceReference.IMachineService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class MachineServiceClient : System.ServiceModel.ClientBase<MachineServiceReference.IMachineService>, MachineServiceReference.IMachineService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MachineServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(MachineServiceClient.GetBindingForEndpoint(endpointConfiguration), MachineServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MachineServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MachineServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MachineServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MachineServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MachineServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<MachineServiceReference.DB_Machine[]> ListeleAsync()
        {
            return base.Channel.ListeleAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMachineService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IMachineService))
            {
                System.ServiceModel.NetTcpBinding result = new System.ServiceModel.NetTcpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMachineService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:9001/Machine");
            }
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IMachineService))
            {
                return new System.ServiceModel.EndpointAddress("net.tcp://localhost:9002/Machine");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IMachineService,
            
            NetTcpBinding_IMachineService,
        }
    }
}
